{"version":3,"file":"static/js/338.d73c2a49.chunk.js","mappings":"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","sources":["components/Button.js","components/movie/MovieCard.js","config.js","hooks/useFavorite.js","components/movie/MovieData/MovieCredit.js","components/movie/MovieData/MovieVideo.js","pages/MovieDetailPage.js","utils/removeFavorite.js","utils/updateFavorite.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Button = ({\n  onClick,\n  className,\n  children,\n  fluid,\n  outline = false,\n  to = \"\",\n  loading = false,\n}) => {\n  const btn = (\n    <button\n      onClick={onClick}\n      className={`${loading ? \"opacity-60 pointer-events-none\" : \" hover:opacity-90\"} ${\n        outline\n          ? \"bg-transparent text-primary border border-primary\"\n          : \"bg-primary text-white\"\n      } duration-100 py-3 px-6 rounded-lg capitalize  gap-1  flex items-center justify-center ${className} ${\n        fluid ? \"w-full\" : \"w-auto\"\n      }`}\n    >\n      {loading ? <span>Loading . . .</span> : children}\n    </button>\n  );\n  return !to ? btn : <Link to={to}>{btn}</Link>;\n};\n\nexport default Button;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { API, fetcher } from \"../../config\";\nimport Button from \"../Button\";\nimport { BsFillStarFill } from \"react-icons/bs\";\nimport useSWR from \"swr\";\nimport { useFavorite } from \"../../hooks/useFavorite\";\nimport { Add } from \"../../utils/updateFavorite\";\nimport Heart from \"../../utils/removeFavorite\";\n\nconst MovieCard = ({ movieid, item = \"\", mediaType }) => {\n  const stateTransfer = {\n    mediaType: mediaType,\n  };\n  const { data, error } = useSWR(API.getMoviebyID(movieid, mediaType), fetcher);\n  const result = movieid ? data : item;\n  const title = result?.title;\n  const vote_average = result?.vote_average;\n  const release_date = result?.release_date;\n  const poster_path = result?.poster_path;\n  const name = result?.name;\n  const first_air_date = result?.first_air_date;\n  const id = result?.id;\n  const isFavorite = useFavorite(id);\n  return (\n    result && (\n      <div className=\"flex flex-col h-full p- text-white rounded-lg select-none movie-card bg-slate-400\">\n        <div className=\"relative\">\n          {isFavorite ? (\n            <div className=\"absolute flex items-center justify-center w-8 h-8 rounded-full cursor-pointer bg-primary top-3 right-3\">\n              <Heart id={id} mediaType={mediaType}></Heart>\n            </div>\n          ) : (\n            <Add id={id} mediaType={mediaType}></Add>\n          )}\n          <img\n            className=\"w-full object-cover rounded-lg mb-5 max-h-[600px]\"\n            src={API.getImageUrl(poster_path, \"w500\")}\n            alt=\"\"\n          />\n        </div>\n        <h3 className=\"mb-3 text-xl text-bold\">{title || name}</h3>\n        <div className=\"flex flex-col justify-end flex-1\">\n          <div className=\"flex items-center justify-between mb-5 text-sm opacity-50\">\n            <span>\n              {new Date(release_date || first_air_date).getFullYear()}\n            </span>\n            <span className=\"flex items-center gap-1\">\n              {vote_average && vote_average.toFixed(1)}\n              <BsFillStarFill></BsFillStarFill>\n            </span>\n          </div>\n          <Link to={`/${mediaType}/${id}`} state={stateTransfer}>\n            <Button fluid>go to movie details</Button>\n          </Link>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default MovieCard;\n","export const fetcher = (url) => fetch(url).then((res) => res.json());\nexport const REACT_APP_URL = \"https://tl-movie.vercel.app\";\nexport const REACT_APP_FACEBOOK_APP_ID = '3108322012762887'\nconst apiKey = \"1a763884400befdbd957d043e8e9e19c\";\nconst API_domain = `https://api.themoviedb.org/3`;\n\nexport const API = {\n  getMoviebyID: (id, mediaType) => `${API_domain}/${mediaType}/${id}?api_key=${apiKey}`,\n  getMovieSearch: (query) =>\n    `${API_domain}/search/movie?api_key=${apiKey}&query=${query}`,\n  getMovieList: (type, page = 1, mediaType = \"all\") => {\n    return type === \"popular\" || type === \"top_rated\" || type === \"now_playing\"\n      ? `${API_domain}/${mediaType}/${type}?api_key=${apiKey}&page=${page}`\n      : type === \"discover\"\n      ? ` ${API_domain}/${type}/${mediaType}?api_key=${apiKey}&page=${page}`\n      : ` ${API_domain}/${type}/${mediaType}/day?api_key=${apiKey}&page=${page}`;\n  },\n\n  getMovieDetail: (movieId, mediaType = \"movie\") =>\n    `${API_domain}/${mediaType}/${movieId}?api_key=${apiKey}`,\n  getImageUrl: (backdrop_path, size = \"original\") =>\n    `https://image.tmdb.org/t/p/${size}/${backdrop_path}`,\n  getDetailMeta: (movieId, meta, mediaType = \"movie\") =>\n    `${API_domain}/${mediaType}/${movieId}/${meta}?api_key=${apiKey}`,\n  getYoutubeVideo: (path) => `https://www.youtube.com/embed/${path}`,\n};\n","import React from \"react\";\nimport { useAuth } from \"../context/auth-context\";\n\nexport const useFavorite = (id) => {\n  const {userInfo} = useAuth();\n  if (userInfo && id) {\n    const index = userInfo.listFavorite && userInfo.listFavorite.find((item) => item.id === id)\n    return !!index;\n\n  }\n  return false\n};\n","import { useParams } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport useSWR from \"swr\";\nimport { API, fetcher } from \"../../../config\";\n\nexport function MovieCredit({ mediaType }) {\n  const { movieId } = useParams();\n  const { data, error } = useSWR(\n    API.getDetailMeta(movieId, \"credits\", mediaType),\n    fetcher\n  );\n  if (error) return <div>failed to load</div>;\n  if (!data) return <div>loading...</div>;\n  const { cast } = data;\n  return (\n    <div className=\"pt-10 md:pb-10\">\n      <h2 className=\"section-title-primary\">Series Cast</h2>\n      <Swiper\n        grapcursor=\"true\"\n        spaceBetween={40}\n        slidesPerView={3}\n        breakpoints={{\n          480: {\n            slidesPerView: 4,\n          },\n          620: {\n            slidesPerView: 5,\n          },\n        }}\n      >\n        {cast?.map((item) => (\n          <SwiperSlide key={item.id}>\n            <div className=\"cast-item\">\n              <img\n                src={API.getImageUrl(item.profile_path)}\n                alt=\"\"\n                className=\"w-full object-cover rounded-lg\"\n              />\n            </div>\n            <h3 className=\"text-xl\">{item.name}</h3>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </div>\n  );\n}\n","/** @format */\n\nimport { useParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport { API, fetcher } from \"../../../config\";\n\nexport function MovieVideo({ mediaType }) {\n  const { movieId } = useParams();\n  const { data, error } = useSWR(\n    API.getDetailMeta(movieId, \"videos\", mediaType),\n    fetcher\n  );\n  if (error) return <div>failed to load</div>;\n  if (!data) return <div>loading...</div>;\n  console.log(data);\n  const { results } = data;\n  return (\n    <>\n      {results\n        ?.filter((item) => {\n          return item.type === \"Trailer\" && item;\n        })\n        ?.map((item) => (\n          <div key={item.id} className=\"w-full py-10 aspect-video\">\n            <h2 className=\"section-title-primary\">{item.name}</h2>\n            <iframe\n              id={item.id}\n              className=\"w-full h-full object-fill min-h-[250px]\"\n              src={API.getYoutubeVideo(item.key)}\n              title=\"YouTube video player\"\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            ></iframe>\n          </div>\n        ))}\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { API, fetcher, REACT_APP_URL } from \"../config\";\nimport useSWR from \"swr\";\nimport Loading from \"../components/Loading\";\nimport { MovieSimilar } from \"../components/movie/MovieData/MovieSimilar\";\nimport { MovieCredit } from \"../components/movie/MovieData/MovieCredit\";\nimport { MovieVideo } from \"../components/movie/MovieData/MovieVideo\";\nimport CommentsFb from \"../components/Facebook\";\n\nfunction MovieDetailPage() {\n  const { movieId } = useParams();\n  const { state } = useLocation();\n  const mediaType = state?.mediaType;\n  const { data, error } = useSWR(\n    API.getMovieDetail(movieId, mediaType),\n    fetcher\n  );\n\n  if (error) return <div>failed to load</div>;\n  if (!data) return <Loading></Loading>;\n\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    genres,\n    overview,\n    release_date,\n    vote_average,\n    runtime,\n    name,\n    first_air_date,\n    number_of_episodes,\n  } = data;\n  const url = `${REACT_APP_URL}/${mediaType}/${movieId}`;\n  return (\n    <div className=\"page-container\">\n      <div className=\"md:h-[500px] relative md:mb-10\">\n        <div className=\"absolute inset-0 hidden bg-white md:block bg-opacity-90\"></div>\n        <div\n          className=\"hidden w-full h-full bg-no-repeat bg-cover md:block\"\n          style={{\n            backgroundImage: `url(${API.getImageUrl(backdrop_path)})`,\n          }}\n        ></div>\n\n        <div className=\"flex flex-col md:banner--flex-style \">\n          <div className=\"w-full md:w-auto md:h-[400px] shrink-0 \">\n            <img\n              src={API.getImageUrl(poster_path)}\n              className=\"object-cover w-auto h-full pb-10 mx-auto rounded-xl\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"md:px-6\">\n            <h1 className=\"text-4xl font-bold text-primary\">\n              {title || name}\n              <span className=\"px-2 text-xl opacity-80\">\n                ({new Date(release_date || first_air_date).getFullYear()})\n              </span>\n            </h1>\n            <div className=\"mb-5\">\n              <span className=\"text-sm\">\n                <span className=\"opacity-50\">Average: </span>\n                {vote_average}/10\n              </span>\n              <span className=\"pl-4 text-sm\">\n                <span className=\"opacity-50\">\n                  {runtime ? \"Run time: \" : \"Episodes: \"}\n                </span>\n                {runtime || number_of_episodes}\n              </span>\n            </div>\n            {genres?.length > 0 && (\n              <div className=\"flex flex-wrap items-center mb-5 gap-x-5 gap-y-3 \">\n                {genres.map((item) => (\n                  <span\n                    className=\"px-4 py-1 border border-white rounded\"\n                    key={item.id}\n                  >\n                    {item.name}\n                  </span>\n                ))}\n              </div>\n            )}\n            <h4 className=\"pb-2 text-xl font-bold text-primary\">Overview</h4>\n            <p className=\"mx-auto text-sm leading-relaxed md:pb-10\">\n              {overview}\n            </p>\n          </div>\n        </div>\n      </div>\n      <MovieCredit mediaType={mediaType}></MovieCredit>\n      <MovieVideo mediaType={mediaType}></MovieVideo>\n      {/* <MovieSimilar mediaType={mediaType}></MovieSimilar> */}\n      {/* <CommentsFb url={url}></CommentsFb> */}\n    </div>\n  );\n}\n\nexport default MovieDetailPage;\n","import {\n  doc,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { useAuth } from \"../context/auth-context\";\nimport { db } from \"../firebase/firebase.config\";\n\nconst removeFavorite = async (e, idMovie, mediaType, user) => {\n  if (user) {\n    e.preventDefault();\n    const newListFavorite = user.listFavorite.filter(item => item.id !== idMovie)\n    const updateData = doc(db, \"users\", user?.id);\n    await updateDoc(updateData, {\n      listFavorite: [...newListFavorite],\n    }).then(() => {\n      console.log(\"Success\");\n    });\n  } else {\n    console.log(\"Failed\");\n  }\n};\n\nconst Heart = ({id, mediaType, className=''}) => {\n  const {userInfo} = useAuth()\n  return (\n    <span\n      onClick={(e) => removeFavorite(e, id, mediaType, userInfo)}\n      className={`cursor-pointer ${className}`}\n    >\n      <AiFillHeart></AiFillHeart>\n    </span>\n  );\n};\nexport default Heart;\n","import {\n  doc,\n  updateDoc,\n  arrayUnion,\n  onSnapshot,\n  collection,\n} from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth } from \"../context/auth-context\";\nimport { db } from \"../firebase/firebase.config\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { toast } from \"react-toastify\";\nconst updateFavorite = async (e, idMovie, mediaType, user) => {\n  if (user) {\n    e.preventDefault();\n    const updateData = doc(db, \"users\", user.id);\n    await updateDoc(updateData, {\n      listFavorite: arrayUnion({ id: idMovie, type: mediaType }),\n    }).then(() => {\n      console.log(\"Success\");\n    });\n  } else {\n    toast.error(\"You have to sign in first!\");\n  }\n};\n\nconst Add = ({ id, mediaType }) => {\n  const {userInfo} = useAuth()\n  return (\n    <span\n      className=\"absolute flex items-center justify-center w-8 h-8 leading-none duration-200 rounded-full cursor-pointer hover:gap-3 top-3 right-3 bg-white/30 backdrop-blur-sm group hover:bg-primary hover:w-auto hover:px-3\"\n      onClick={(e) => updateFavorite(e, id, mediaType, userInfo)}\n    >\n      <AiOutlinePlus></AiOutlinePlus>\n      <span className=\"hidden text-transparent group-hover:block group-hover:text-white\">\n        Add to favorite\n      </span>\n    </span>\n  );\n};\n\nexport {Add, updateFavorite};\n"],"names":["onClick","className","children","fluid","outline","to","loading","btn","movieid","item","mediaType","stateTransfer","useSWR","API","fetcher","data","result","error","title","vote_average","release_date","poster_path","name","first_air_date","id","isFavorite","useFavorite","src","alt","Date","getFullYear","toFixed","state","url","fetch","then","res","json","REACT_APP_URL","apiKey","API_domain","getMoviebyID","getMovieSearch","query","getMovieList","type","page","getMovieDetail","movieId","getImageUrl","backdrop_path","size","getDetailMeta","meta","getYoutubeVideo","path","userInfo","useAuth","listFavorite","find","MovieCredit","useParams","cast","grapcursor","spaceBetween","slidesPerView","breakpoints","map","profile_path","MovieVideo","console","log","results","filter","key","frameBorder","allow","allowFullScreen","useLocation","Loading","genres","overview","runtime","number_of_episodes","style","backgroundImage","length","removeFavorite","e","idMovie","user","preventDefault","newListFavorite","updateData","doc","db","updateDoc","updateFavorite","arrayUnion","toast","Add"],"sourceRoot":""}