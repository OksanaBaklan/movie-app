{"version":3,"file":"static/js/651.8e15356e.chunk.js","mappings":"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","sources":["components/Button.js","components/Input.js","components/Label.js","components/movie/MovieCard.js","config.js","hooks/useFavorite.js","utils/handleChangeSecondToDate.js","pages/UserPage.js","utils/removeFavorite.js","utils/updateFavorite.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Button = ({\n  onClick,\n  className,\n  children,\n  fluid,\n  outline = false,\n  to = \"\",\n  loading = false,\n}) => {\n  const btn = (\n    <button\n      onClick={onClick}\n      className={`${loading ? \"opacity-60 pointer-events-none\" : \" hover:opacity-90\"} ${\n        outline\n          ? \"bg-transparent text-primary border border-primary\"\n          : \"bg-primary text-white\"\n      } duration-100 py-3 px-6 rounded-lg capitalize  gap-1  flex items-center justify-center ${className} ${\n        fluid ? \"w-full\" : \"w-auto\"\n      }`}\n    >\n      {loading ? <span>Loading . . .</span> : children}\n    </button>\n  );\n  return !to ? btn : <Link to={to}>{btn}</Link>;\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\nconst Input = ({\n  placeholder = \"Placeholder\",\n  icon = false,\n  defaultValue='',\n  onChange=() => {}\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n  return (\n    <div className=\"flex items-center px-3 py-3 overflow-hidden border rounded-md\">\n      <input\n        type={!icon ? 'text' : showPassword ? \"text\" : \"password\"}\n        className=\"flex-1 bg-transparent outline-none \"\n        placeholder={placeholder}\n        defaultValue={defaultValue}\n        onChange={onChange}\n      />\n      {icon && (\n        <span\n          className=\"px-5 cursor-pointer text-primary\"\n          onClick={handleTogglePassword}\n        >\n          {!showPassword ? (\n            <AiFillEye size={20}></AiFillEye>\n          ) : (\n            <AiFillEyeInvisible size={20}></AiFillEyeInvisible>\n          )}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Label = ({children, className='text-slate-900'}) => {\n    return (\n        <div className={`text-left capitalize ${className}`}>{children}</div>\n    );\n};\n\nexport default Label;","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { API, fetcher } from \"../../config\";\nimport Button from \"../Button\";\nimport { BsFillStarFill } from \"react-icons/bs\";\nimport useSWR from \"swr\";\nimport { useFavorite } from \"../../hooks/useFavorite\";\nimport { Add } from \"../../utils/updateFavorite\";\nimport Heart from \"../../utils/removeFavorite\";\n\nconst MovieCard = ({ movieid, item = \"\", mediaType }) => {\n  const stateTransfer = {\n    mediaType: mediaType,\n  };\n  const { data, error } = useSWR(API.getMoviebyID(movieid, mediaType), fetcher);\n  const result = movieid ? data : item;\n  const title = result?.title;\n  const vote_average = result?.vote_average;\n  const release_date = result?.release_date;\n  const poster_path = result?.poster_path;\n  const name = result?.name;\n  const first_air_date = result?.first_air_date;\n  const id = result?.id;\n  const isFavorite = useFavorite(id);\n  return (\n    result && (\n      <div className=\"flex flex-col h-full p- text-white rounded-lg select-none movie-card bg-slate-400\">\n        <div className=\"relative\">\n          {isFavorite ? (\n            <div className=\"absolute flex items-center justify-center w-8 h-8 rounded-full cursor-pointer bg-primary top-3 right-3\">\n              <Heart id={id} mediaType={mediaType}></Heart>\n            </div>\n          ) : (\n            <Add id={id} mediaType={mediaType}></Add>\n          )}\n          <img\n            className=\"w-full object-cover rounded-lg mb-5 max-h-[600px]\"\n            src={API.getImageUrl(poster_path, \"w500\")}\n            alt=\"\"\n          />\n        </div>\n        <h3 className=\"mb-3 text-xl text-bold\">{title || name}</h3>\n        <div className=\"flex flex-col justify-end flex-1\">\n          <div className=\"flex items-center justify-between mb-5 text-sm opacity-50\">\n            <span>\n              {new Date(release_date || first_air_date).getFullYear()}\n            </span>\n            <span className=\"flex items-center gap-1\">\n              {vote_average && vote_average.toFixed(1)}\n              <BsFillStarFill></BsFillStarFill>\n            </span>\n          </div>\n          <Link to={`/${mediaType}/${id}`} state={stateTransfer}>\n            <Button fluid>go to movie details</Button>\n          </Link>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default MovieCard;\n","/** @format */\n\nexport const fetcher = (url) => fetch(url).then((res) => res.json());\nexport const REACT_APP_URL = \"https://tl-movie.vercel.app\";\nconst apiKey = \"3d673b2d8e40eafc68577fae5a6a1f4b\";\nconst API_domain = `https://api.themoviedb.org/3`;\n\nexport const API = {\n  getMoviebyID: (id, mediaType) =>\n    `${API_domain}/${mediaType}/${id}?api_key=${apiKey}`,\n  getMovieSearch: (query) =>\n    `${API_domain}/search/movie?api_key=${apiKey}&query=${query}`,\n  getMovieList: (type, page = 1, mediaType = \"all\") => {\n    return type === \"popular\" || type === \"top_rated\" || type === \"now_playing\"\n      ? `${API_domain}/${mediaType}/${type}?api_key=${apiKey}&page=${page}`\n      : type === \"discover\"\n      ? ` ${API_domain}/${type}/${mediaType}?api_key=${apiKey}&page=${page}`\n      : ` ${API_domain}/${type}/${mediaType}/day?api_key=${apiKey}&page=${page}`;\n  },\n\n  getMovieDetail: (movieId, mediaType = \"movie\") =>\n    `${API_domain}/${mediaType}/${movieId}?api_key=${apiKey}`,\n  getImageUrl: (backdrop_path, size = \"original\") =>\n    `https://image.tmdb.org/t/p/${size}/${backdrop_path}`,\n  getDetailMeta: (movieId, meta, mediaType = \"movie\") =>\n    `${API_domain}/${mediaType}/${movieId}/${meta}?api_key=${apiKey}`,\n  getYoutubeVideo: (path) => `https://www.youtube.com/embed/${path}`,\n};\n","import React from \"react\";\nimport { useAuth } from \"../context/auth-context\";\n\nexport const useFavorite = (id) => {\n  const {userInfo} = useAuth();\n  if (userInfo && id) {\n    const index = userInfo.listFavorite && userInfo.listFavorite.find((item) => item.id === id)\n    return !!index;\n\n  }\n  return false\n};\n","export function handleChangeSecondToDate(secs) {\n    const date = new Date(secs * 1000);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const result = day + \"-\" + month + \"-\" + year;\n    return result;\n  }\n  ","/** @format */\n\nimport { addDoc, doc, updateDoc } from \"firebase/firestore\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Button from \"../components/Button\";\nimport MovieCard from \"../components/movie/MovieCard\";\nimport { useAuth } from \"../context/auth-context\";\nimport defaultAvatar from \"../images/avatar_default.jpg\";\nimport { handleChangeSecondToDate } from \"../utils/handleChangeSecondToDate\";\nimport { MdModeEditOutline } from \"react-icons/md\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport Label from \"../components/Label\";\nimport Input from \"../components/Input\";\nimport { auth, db } from \"../firebase/firebase.config\";\nimport {\n  getStorage,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"firebase/storage\";\nimport { updatePassword, updateProfile } from \"firebase/auth\";\nconst storage = getStorage();\n\nconst UserPage = () => {\n  const { userInfo } = useAuth(); // from firebase-auth\n  const listFavorite = userInfo?.listFavorite;\n  const [edit, setEdit] = useState(false);\n  const [imagePreview, setImagePreview] = useState(\"\"); // preview image update\n  const [url, setUrl] = useState(userInfo?.image || defaultAvatar); // avatar url of user\n  const [loading, setLoading] = useState(false);\n  const [values, setValue] = useState(\"\"); // values which user change\n  function handleSetPreview(image) {\n    try {\n      image.preview = URL.createObjectURL(image);\n    } catch (err) {\n      console.log(err);\n    }\n    setImagePreview(image);\n  }\n  const handleSubmit = (values) => {\n    if (!imagePreview) {\n      console.log(\"No Image\");\n    } else if (imagePreview) {\n      const file = imagePreview;\n      const storageRef = ref(storage, \"images\" + \"/\" + file.name);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n          switch (snapshot.state) {\n            case \"paused\":\n              console.log(\"Upload is paused\");\n              break;\n            case \"running\":\n              console.log(\"Upload is running\");\n              break;\n            default:\n              console.log(\"Nothing\");\n          }\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            console.log(\"File available at\", downloadURL);\n            setUrl(downloadURL);\n          });\n        }\n      );\n    }\n  };\n  useEffect(() => {\n    const update = async () => {\n      if (!values) return null;\n      const updateUser = doc(db, \"users\", userInfo?.id);\n      await updateDoc(updateUser, {\n        displayName: values?.fullName\n          ? values.fullName.trim()\n          : userInfo.fullName,\n        image: url ? url : \"\",\n        password: values?.password,\n      });\n      updateProfile(auth.currentUser, {\n        displayName: values.fullName,\n        photoURL: url,\n        password: values.password,\n      });\n      updatePassword(auth.currentUser, values.password);\n      setLoading(false);\n      toast.success(\"Your profile has updated!\", {\n        pauseOnHover: false,\n        autoClose: 1500,\n      });\n      toast.success(\"Please re-signin\", {\n        pauseOnHover: false,\n        autoClose: 1500,\n      });\n    };\n    update();\n  }, [url]);\n  useEffect(() => {\n    return () => {\n      imagePreview && URL.revokeObjectURL(imagePreview.preview);\n    };\n  }, [imagePreview]);\n  return (\n    <div className=\" page-container\">\n      <div className=\"px-5 py-5 border border-gray-500 xs:mt-10 rounded-xl\">\n        {userInfo ? (\n          <>\n            <div className=\"gap-10 mb-5 text-center xs:text-left xs:flex\">\n              <div className=\"xs:-translate-y-16 \">\n                <img\n                  src={userInfo.image || defaultAvatar}\n                  className=\"w-32 h-32 mx-auto border rounded-full shadow-md xs:mx-0\"\n                  alt=\"\"\n                />\n              </div>\n              <div className=\" justify-between gap-3 flex-1 flex flex-col min-w-[700px]:flex-row\">\n                <div>\n                  <h4 className=\"text-xl font-semibold xs:text-3xl\">\n                    {userInfo.displayName}\n                  </h4>\n                  <p className=\"mt-1 text-sm text-gray-500\">\n                    Join <span className=\"text-primary\">APP Movie</span> at{\" \"}\n                    {handleChangeSecondToDate(\n                      userInfo.createdAt && userInfo.createdAt.seconds\n                    )}\n                  </p>\n                </div>\n                {/* <span>\n                  <Button onClick={() => setEdit(!edit)} className=\"mx-auto\">\n                    <MdModeEditOutline></MdModeEditOutline>Edit profile\n                  </Button>\n                </span> */}\n              </div>\n            </div>\n            <Formik\n              initialValues={{\n                fullName: userInfo.displayName,\n                password: userInfo.password,\n              }}\n              onSubmit={(values) => {\n                setLoading(true);\n                setValue(values);\n                handleSubmit(values);\n              }}\n            >\n              {({ errors, touched, setFieldValue }) => {\n                return (\n                  <Form\n                    className={`flex flex-col gap-2 py-5 duration-300 ${\n                      !edit ? \"hidden\" : \"block\"\n                    }`}\n                  >\n                    <div className=\"border-b border-b-gray-500\"></div>\n\n                    <div className=\"flex flex-col gap-2 sm:flex-row\">\n                      <div className=\"flex-1\">\n                        <Label className=\"text-white\">Your Full Name</Label>\n                        <Input\n                          onChange={(e) =>\n                            setFieldValue(\"fullName\", e.target.value)\n                          }\n                          defaultValue={userInfo.fullName}\n                          placeholder={userInfo.fullName}\n                        ></Input>\n                      </div>\n                      <div className=\"flex-1\">\n                        <Label className=\"text-white\">Your Password</Label>\n                        <Input\n                          onChange={(e) =>\n                            setFieldValue(\"password\", e.target.value)\n                          }\n                          icon={true}\n                          defaultValue={userInfo.password}\n                          placeholder={userInfo.password}\n                        ></Input>\n                      </div>\n                    </div>\n                    <Label className=\"text-white\">Your avatar</Label>\n                    <input\n                      type=\"file\"\n                      onChange={(e) => {\n                        handleSetPreview(e.target.files[0]);\n                      }}\n                      className=\"p-3 border rounded-md\"\n                    />\n                    {imagePreview && (\n                      <div className=\"flex items-center justify-center p-5 border\">\n                        <img\n                          src={imagePreview.preview && imagePreview.preview}\n                          alt=\"\"\n                          width=\"300px\"\n                        />\n                      </div>\n                    )}\n                    <span className=\"flex gap-3 mt-5\">\n                      {/* <Button outline>Delete account</Button> */}\n                      <Button type=\"submit\" loading={loading}>\n                        Update\n                      </Button>\n                    </span>\n                  </Form>\n                );\n              }}\n            </Formik>\n\n            <div className=\"border-b border-b-gray-500\"></div>\n            <div className=\"pt-8 \">\n              <h4 className=\"section-title-primary\">\n                My favorite list{\" \"}\n                <span className=\"text-gray-500 \">\n                  ({listFavorite && listFavorite.length})\n                </span>\n              </h4>\n              <div className=\"grid grid-cols-1 gap-10 xs:grid-cols-2 md:grid-cols-3\">\n                {listFavorite &&\n                  listFavorite.length > 0 &&\n                  listFavorite.map((item) => (\n                    <MovieCard\n                      key={item.id}\n                      movieid={item.id}\n                      mediaType={item.type}\n                    ></MovieCard>\n                  ))}\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"p-10 text-center\">\n            You have to{\" \"}\n            <a className=\"text-primary\" href=\"/log-in\">\n              sign in\n            </a>{\" \"}\n            first!\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserPage;\n","import {\n  doc,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { useAuth } from \"../context/auth-context\";\nimport { db } from \"../firebase/firebase.config\";\n\nconst removeFavorite = async (e, idMovie, mediaType, user) => {\n  if (user) {\n    e.preventDefault();\n    const newListFavorite = user.listFavorite.filter(item => item.id !== idMovie)\n    const updateData = doc(db, \"users\", user?.id);\n    await updateDoc(updateData, {\n      listFavorite: [...newListFavorite],\n    }).then(() => {\n      console.log(\"Success\");\n    });\n  } else {\n    console.log(\"Failed\");\n  }\n};\n\nconst Heart = ({id, mediaType, className=''}) => {\n  const {userInfo} = useAuth()\n  return (\n    <span\n      onClick={(e) => removeFavorite(e, id, mediaType, userInfo)}\n      className={`cursor-pointer ${className}`}\n    >\n      <AiFillHeart></AiFillHeart>\n    </span>\n  );\n};\nexport default Heart;\n","import {\n  doc,\n  updateDoc,\n  arrayUnion,\n  onSnapshot,\n  collection,\n} from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth } from \"../context/auth-context\";\nimport { db } from \"../firebase/firebase.config\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { toast } from \"react-toastify\";\nconst updateFavorite = async (e, idMovie, mediaType, user) => {\n  if (user) {\n    e.preventDefault();\n    const updateData = doc(db, \"users\", user.id);\n    await updateDoc(updateData, {\n      listFavorite: arrayUnion({ id: idMovie, type: mediaType }),\n    }).then(() => {\n      console.log(\"Success\");\n    });\n  } else {\n    toast.error(\"You have to sign in first!\");\n  }\n};\n\nconst Add = ({ id, mediaType }) => {\n  const {userInfo} = useAuth()\n  return (\n    <span\n      className=\"absolute flex items-center justify-center w-8 h-8 leading-none duration-200 rounded-full cursor-pointer hover:gap-3 top-3 right-3 bg-white/30 backdrop-blur-sm group hover:bg-primary hover:w-auto hover:px-3\"\n      onClick={(e) => updateFavorite(e, id, mediaType, userInfo)}\n    >\n      <AiOutlinePlus></AiOutlinePlus>\n      <span className=\"hidden text-transparent group-hover:block group-hover:text-white\">\n        Add to favorite\n      </span>\n    </span>\n  );\n};\n\nexport {Add, updateFavorite};\n"],"names":["onClick","className","children","fluid","outline","to","loading","btn","placeholder","icon","defaultValue","onChange","useState","showPassword","setShowPassword","type","size","movieid","item","mediaType","stateTransfer","useSWR","API","fetcher","data","result","error","title","vote_average","release_date","poster_path","name","first_air_date","id","isFavorite","useFavorite","src","alt","Date","getFullYear","toFixed","state","url","fetch","then","res","json","REACT_APP_URL","apiKey","API_domain","getMoviebyID","getMovieSearch","query","getMovieList","page","getMovieDetail","movieId","getImageUrl","backdrop_path","getDetailMeta","meta","getYoutubeVideo","path","userInfo","useAuth","listFavorite","find","handleChangeSecondToDate","secs","date","year","month","getMonth","getDate","storage","getStorage","edit","imagePreview","setImagePreview","image","defaultAvatar","setUrl","setLoading","values","setValue","useEffect","update","updateUser","doc","db","updateDoc","displayName","fullName","trim","password","updateProfile","auth","photoURL","updatePassword","toast","pauseOnHover","autoClose","URL","revokeObjectURL","preview","createdAt","seconds","initialValues","onSubmit","file","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","console","log","getDownloadURL","downloadURL","handleSubmit","errors","touched","setFieldValue","Label","Input","e","target","value","createObjectURL","err","handleSetPreview","files","width","Button","length","map","MovieCard","href","removeFavorite","idMovie","user","preventDefault","newListFavorite","filter","updateData","updateFavorite","arrayUnion","Add"],"sourceRoot":""}