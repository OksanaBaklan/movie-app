{"version":3,"file":"static/js/706.1d413d21.chunk.js","mappings":"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","sources":["components/Button.js","components/Input.js","components/Label.js","pages/SignInPage.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Button = ({\n  onClick,\n  className,\n  children,\n  fluid,\n  outline = false,\n  to = \"\",\n  loading = false,\n}) => {\n  const btn = (\n    <button\n      onClick={onClick}\n      className={`${loading ? \"opacity-60 pointer-events-none\" : \" hover:opacity-90\"} ${\n        outline\n          ? \"bg-transparent text-primary border border-primary\"\n          : \"bg-primary text-white\"\n      } duration-100 py-3 px-6 rounded-lg capitalize  gap-1  flex items-center justify-center ${className} ${\n        fluid ? \"w-full\" : \"w-auto\"\n      }`}\n    >\n      {loading ? <span>Loading . . .</span> : children}\n    </button>\n  );\n  return !to ? btn : <Link to={to}>{btn}</Link>;\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\nconst Input = ({\n  placeholder = \"Placeholder\",\n  icon = false,\n  defaultValue='',\n  onChange=() => {}\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n  return (\n    <div className=\"flex items-center px-3 py-3 overflow-hidden border rounded-md\">\n      <input\n        type={!icon ? 'text' : showPassword ? \"text\" : \"password\"}\n        className=\"flex-1 bg-transparent outline-none \"\n        placeholder={placeholder}\n        defaultValue={defaultValue}\n        onChange={onChange}\n      />\n      {icon && (\n        <span\n          className=\"px-5 cursor-pointer text-primary\"\n          onClick={handleTogglePassword}\n        >\n          {!showPassword ? (\n            <AiFillEye size={20}></AiFillEye>\n          ) : (\n            <AiFillEyeInvisible size={20}></AiFillEyeInvisible>\n          )}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Label = ({children, className='text-slate-900'}) => {\n    return (\n        <div className={`text-left capitalize ${className}`}>{children}</div>\n    );\n};\n\nexport default Label;","/** @format */\n\nimport React, { useEffect } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Button from \"../components/Button\";\nimport Input from \"../components/Input\";\nimport Label from \"../components/Label\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport { auth, db } from \"../firebase/firebase.config\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useAuth } from \"../context/auth-context\";\n\nconst SignInPage = () => {\n  const { userInfo } = useAuth();\n  const navigate = useNavigate();\n  async function handleSignIn(values) {\n    try {\n      await signInWithEmailAndPassword(auth, values.email, values.password);\n      toast.success(\"Success! You have been authorized!\", {\n        pauseOnHover: false,\n        autoClose: 1500,\n      });\n      setTimeout(() => {\n        navigate(\"/\");\n      }, 1500);\n    } catch (err) {\n      toast.error(\"Please check your email and password\", {\n        pauseOnHover: false,\n        autoClose: 1500,\n      });\n    }\n  }\n  useEffect(() => {\n    document.title = \"Sign In\";\n    if (userInfo?.email) navigate(\"/\");\n  }, []);\n  return (\n    <div className=\"text-center\">\n      <h4 className=\"mb-3 text-3xl font-semibold text-primary\">Sign In</h4>\n      <p className=\"mb-3 text-sm\">\n        Dont have an account?\n        <br />\n        <a href=\"/sign-up\" className=\"text-primary\">\n          Sign Up\n        </a>\n      </p>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email(\"Invalid Email. You email must have @ character\")\n            .required(\"Please fill this field!\"),\n          password: Yup.string()\n            .min(6, \"At least 6 characters\")\n            .required(\"Please fill this field!\"),\n        })}\n        onSubmit={(values) => {\n          handleSignIn(values);\n        }}\n      >\n        {({ errors, touched, setFieldValue }) => {\n          return (\n            <Form className=\"flex flex-col w-full gap-3\">\n              <Label>Your Email *</Label>\n              <Input\n                onChange={(e) => setFieldValue(\"email\", e.target.value)}\n                placeholder=\"example@gmail.com\"\n              ></Input>\n              {errors.email && touched.email && (\n                <div className=\"input__error\">{errors.email}</div>\n              )}\n              <Label>Your Password *</Label>\n              <Input\n                onChange={(e) => setFieldValue(\"password\", e.target.value)}\n                placeholder=\"John109xyz\"\n                icon={true}\n              ></Input>\n              {errors.password && touched.password && (\n                <div className=\"input__error\">{errors.password}</div>\n              )}\n              <Button type=\"submit\" fluid={true} className=\"mt-3\">\n                Sign In\n              </Button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignInPage;\n"],"names":["onClick","className","children","fluid","outline","to","loading","btn","placeholder","icon","defaultValue","onChange","useState","showPassword","setShowPassword","type","size","userInfo","useAuth","navigate","useNavigate","values","signInWithEmailAndPassword","auth","email","password","toast","pauseOnHover","autoClose","setTimeout","useEffect","document","title","href","initialValues","validationSchema","Yup","required","min","onSubmit","handleSignIn","errors","touched","setFieldValue","e","target","value"],"sourceRoot":""}