{"version":3,"file":"static/js/97.02022b94.chunk.js","mappings":"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","sources":["components/Button.js","components/movie/MovieCard.js","config.js","hooks/useFavorite.js","components/Searching.js","pages/MoviePage.js","hooks/useDebounce.js","pages/categorize/Movies.js","utils/removeFavorite.js","utils/updateFavorite.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Button = ({\n  onClick,\n  className,\n  children,\n  fluid,\n  outline = false,\n  to = \"\",\n  loading = false,\n}) => {\n  const btn = (\n    <button\n      onClick={onClick}\n      className={`${loading ? \"opacity-60 pointer-events-none\" : \" hover:opacity-90\"} ${\n        outline\n          ? \"bg-transparent text-primary border border-primary\"\n          : \"bg-primary text-white\"\n      } duration-100 py-3 px-6 rounded-lg capitalize  gap-1  flex items-center justify-center ${className} ${\n        fluid ? \"w-full\" : \"w-auto\"\n      }`}\n    >\n      {loading ? <span>Loading . . .</span> : children}\n    </button>\n  );\n  return !to ? btn : <Link to={to}>{btn}</Link>;\n};\n\nexport default Button;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { API, fetcher } from \"../../config\";\nimport Button from \"../Button\";\nimport { BsFillStarFill } from \"react-icons/bs\";\nimport useSWR from \"swr\";\nimport { useFavorite } from \"../../hooks/useFavorite\";\nimport { Add } from \"../../utils/updateFavorite\";\nimport Heart from \"../../utils/removeFavorite\";\n\nconst MovieCard = ({ movieid, item = \"\", mediaType }) => {\n  const stateTransfer = {\n    mediaType: mediaType,\n  };\n  const { data, error } = useSWR(API.getMoviebyID(movieid, mediaType), fetcher);\n  const result = movieid ? data : item;\n  const title = result?.title;\n  const vote_average = result?.vote_average;\n  const release_date = result?.release_date;\n  const poster_path = result?.poster_path;\n  const name = result?.name;\n  const first_air_date = result?.first_air_date;\n  const id = result?.id;\n  const isFavorite = useFavorite(id);\n  return (\n    result && (\n      <div className=\"flex flex-col h-full p-3 text-white rounded-lg select-none movie-card bg-slate-400\">\n        <div className=\"relative\">\n          {isFavorite ? (\n            <div className=\"absolute flex items-center justify-center w-8 h-8 rounded-full cursor-pointer bg-primary top-3 right-3\">\n              <Heart id={id} mediaType={mediaType}></Heart>\n            </div>\n          ) : (\n            <Add id={id} mediaType={mediaType}></Add>\n          )}\n          <img\n            className=\"w-full object-cover rounded-lg mb-5 max-h-[600px]\"\n            src={API.getImageUrl(poster_path, \"w500\")}\n            alt=\"\"\n          />\n        </div>\n        <h3 className=\"mb-3 text-xl text-bold\">{title || name}</h3>\n        <div className=\"flex flex-col justify-end flex-1\">\n          <div className=\"flex items-center justify-between mb-5 text-sm opacity-50\">\n            <span>\n              {new Date(release_date || first_air_date).getFullYear()}\n            </span>\n            <span className=\"flex items-center gap-1\">\n              {vote_average && vote_average.toFixed(1)}\n              <BsFillStarFill></BsFillStarFill>\n            </span>\n          </div>\n          <Link to={`/${mediaType}/${id}`} state={stateTransfer}>\n            <Button fluid>go to movie details</Button>\n          </Link>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default MovieCard;\n","export const fetcher = (url) => fetch(url).then((res) => res.json());\nexport const REACT_APP_URL = \"https://tl-movie.vercel.app\";\nexport const REACT_APP_FACEBOOK_APP_ID = '3108322012762887'\nconst apiKey = \"1a763884400befdbd957d043e8e9e19c\";\nconst API_domain = `https://api.themoviedb.org/3`;\n\nexport const API = {\n  getMoviebyID: (id, mediaType) => `${API_domain}/${mediaType}/${id}?api_key=${apiKey}`,\n  getMovieSearch: (query) =>\n    `${API_domain}/search/movie?api_key=${apiKey}&query=${query}`,\n  getMovieList: (type, page = 1, mediaType = \"all\") => {\n    return type === \"popular\" || type === \"top_rated\" || type === \"now_playing\"\n      ? `${API_domain}/${mediaType}/${type}?api_key=${apiKey}&page=${page}`\n      : type === \"discover\"\n      ? ` ${API_domain}/${type}/${mediaType}?api_key=${apiKey}&page=${page}`\n      : ` ${API_domain}/${type}/${mediaType}/day?api_key=${apiKey}&page=${page}`;\n  },\n\n  getMovieDetail: (movieId, mediaType = \"movie\") =>\n    `${API_domain}/${mediaType}/${movieId}?api_key=${apiKey}`,\n  getImageUrl: (backdrop_path, size = \"original\") =>\n    `https://image.tmdb.org/t/p/${size}/${backdrop_path}`,\n  getDetailMeta: (movieId, meta, mediaType = \"movie\") =>\n    `${API_domain}/${mediaType}/${movieId}/${meta}?api_key=${apiKey}`,\n  getYoutubeVideo: (path) => `https://www.youtube.com/embed/${path}`,\n};\n","import React from \"react\";\nimport { useAuth } from \"../context/auth-context\";\n\nexport const useFavorite = (id) => {\n  const {userInfo} = useAuth();\n  if (userInfo && id) {\n    const index = userInfo.listFavorite && userInfo.listFavorite.find((item) => item.id === id)\n    return !!index;\n\n  }\n  return false\n};\n","/** @format */\n\nimport React from \"react\";\n\nconst Searching = ({ handleChange }) => {\n  return (\n    <div className=\"flex mb-10 rounded-lg overflow-hidden\">\n      <div className=\"flex-1\">\n        <input\n          type=\"text\"\n          className=\"w-full p-4 bg-slate-400 outline-none text-black\"\n          placeholder=\"Search your film here . . .\"\n          onChange={handleChange}\n        />\n      </div>\n      <button className=\"p-4 bg-primary text-white\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-6\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default Searching;\n","import React, { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\nimport Loading from \"../components/Loading\";\nimport MovieCard from \"../components/movie/MovieCard\";\nimport { API, fetcher } from \"../config\";\nimport useDebounce from \"../hooks/useDebounce\";\nimport ReactPaginate from \"react-paginate\";\nimport \"swiper/css\";\nimport Searching from \"../components/Searching\";\nconst itemsPerPage = 20;\n\n\nconst MoviePage = ({ type, mediaType }) => {\n  const [filter, setFilter] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n  const [url, setUrl] = useState(API.getMovieList(type, pageNumber, mediaType));\n  const { data, error } = useSWR(url, fetcher);\n  const filterDebounce = useDebounce(filter, 500);\n  const loading = !data && !error;\n  function handleChange(e) {\n    setFilter(e.target.value);\n  }\n\n  useEffect(() => {\n    if (filterDebounce) {\n      setUrl(API.getMovieSearch(filterDebounce));\n    } else {\n      setUrl(API.getMovieList(type, pageNumber, mediaType));\n    }\n  }, [filterDebounce, pageNumber, type, mediaType]);\n\n  // Pagination\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  useEffect(() => {\n    if (!data || !data.total_pages) return;\n    setPageCount(Math.ceil(data.total_pages / itemsPerPage));\n  }, [data, itemOffset]);\n\n  const handlePageClick = (event) => {\n    const newOffset = (event.selected * itemsPerPage) % data.total_pages;\n    setItemOffset(newOffset);\n    setPageNumber(event.selected + 1);\n  };\n  const movies = data?.results || [];\n\n  return (\n    <div className=\" page-container\">\n      <Searching handleChange={handleChange}></Searching>\n      {loading ? (\n        <Loading></Loading>\n      ) : (\n        <>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-10\">\n            {movies.length > 0 &&\n              movies.map((item) => (\n                <MovieCard\n                  key={item.id}\n                  item = {item}\n                  mediaType={mediaType}\n                ></MovieCard>\n              ))}\n          </div>\n        </>\n      )}\n      <ReactPaginate\n        breakLabel=\"...\"\n        nextLabel=\"\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"\"\n        renderOnZeroPageCount={null}\n        className=\"pagination\"\n      />\n    </div>\n  );\n};\n\nexport default MoviePage;\n","import { useEffect, useState } from \"react\";\n\nexport default function useDebounce(initial = \"\", delay = 1000) {\n  const [debounceValue, setDebounceValue] = useState(initial);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebounceValue(initial);\n    }, delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [delay, initial]);\n\n  return debounceValue;\n}","import React from \"react\";\nimport MoviePage from \"../MoviePage\";\n\nconst Movies = () => {\n  const pathname = window.location.pathname.slice(1);\n  const type = pathname === \"movie\" ? \"popular\" : pathname;\n\n  return (\n    <div>\n      <MoviePage type={type} mediaType={\"movie\"}></MoviePage>\n    </div>\n  );\n};\n\nexport default Movies;\n","import {\n  doc,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { useAuth } from \"../context/auth-context\";\nimport { db } from \"../firebase/firebase.config\";\n\nconst removeFavorite = async (e, idMovie, mediaType, user) => {\n  if (user) {\n    e.preventDefault();\n    const newListFavorite = user.listFavorite.filter(item => item.id !== idMovie)\n    const updateData = doc(db, \"users\", user?.id);\n    await updateDoc(updateData, {\n      listFavorite: [...newListFavorite],\n    }).then(() => {\n      console.log(\"Success\");\n    });\n  } else {\n    console.log(\"Failed\");\n  }\n};\n\nconst Heart = ({id, mediaType, className=''}) => {\n  const {userInfo} = useAuth()\n  return (\n    <span\n      onClick={(e) => removeFavorite(e, id, mediaType, userInfo)}\n      className={`cursor-pointer ${className}`}\n    >\n      <AiFillHeart></AiFillHeart>\n    </span>\n  );\n};\nexport default Heart;\n","import {\n  doc,\n  updateDoc,\n  arrayUnion,\n  onSnapshot,\n  collection,\n} from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth } from \"../context/auth-context\";\nimport { db } from \"../firebase/firebase.config\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { toast } from \"react-toastify\";\nconst updateFavorite = async (e, idMovie, mediaType, user) => {\n  if (user) {\n    e.preventDefault();\n    const updateData = doc(db, \"users\", user.id);\n    await updateDoc(updateData, {\n      listFavorite: arrayUnion({ id: idMovie, type: mediaType }),\n    }).then(() => {\n      console.log(\"Success\");\n    });\n  } else {\n    toast.error(\"You have to sign in first!\");\n  }\n};\n\nconst Add = ({ id, mediaType }) => {\n  const {userInfo} = useAuth()\n  return (\n    <span\n      className=\"absolute flex items-center justify-center w-8 h-8 leading-none duration-200 rounded-full cursor-pointer hover:gap-3 top-3 right-3 bg-white/30 backdrop-blur-sm group hover:bg-primary hover:w-auto hover:px-3\"\n      onClick={(e) => updateFavorite(e, id, mediaType, userInfo)}\n    >\n      <AiOutlinePlus></AiOutlinePlus>\n      <span className=\"hidden text-transparent group-hover:block group-hover:text-white\">\n        Add to favorite\n      </span>\n    </span>\n  );\n};\n\nexport {Add, updateFavorite};\n"],"names":["onClick","className","children","fluid","outline","to","loading","btn","movieid","item","mediaType","stateTransfer","useSWR","API","fetcher","data","result","error","title","vote_average","release_date","poster_path","name","first_air_date","id","isFavorite","useFavorite","src","alt","Date","getFullYear","toFixed","state","url","fetch","then","res","json","REACT_APP_URL","apiKey","API_domain","getMoviebyID","getMovieSearch","query","getMovieList","type","page","getMovieDetail","movieId","getImageUrl","backdrop_path","size","getDetailMeta","meta","getYoutubeVideo","path","userInfo","useAuth","listFavorite","find","handleChange","placeholder","onChange","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","useState","filter","setFilter","pageNumber","setPageNumber","setUrl","filterDebounce","initial","delay","debounceValue","setDebounceValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","pageCount","setPageCount","itemOffset","setItemOffset","total_pages","Math","ceil","movies","results","e","target","value","Loading","length","map","MovieCard","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","pathname","window","location","slice","removeFavorite","idMovie","user","preventDefault","newListFavorite","updateData","doc","db","updateDoc","console","log","updateFavorite","arrayUnion","toast","Add"],"sourceRoot":""}